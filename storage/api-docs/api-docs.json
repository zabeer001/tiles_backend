{
    "openapi": "3.0.0",
    "info": {
        "title": "User API",
        "description": "API documentation for User management",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login and get JWT token",
                "operationId": "fe26ab8400b717f7892b280a17827c57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secretpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful, token returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not create token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Could not create token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "cfadf87dd76235e9475d9f843f55ba77",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Could not log out, please try again later"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated user's profile",
                "operationId": "68ef341ff1c476e4106262c199ef1503",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the user's profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "role_id": {
                                                    "type": "string",
                                                    "example": "2"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user and generate JWT token",
                "operationId": "285020423c933eac821839a8cda29844",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "The name of the user",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "The email address of the user",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "description": "The password for the user",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "The confirmation of the password",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully and token generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "johndoe@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "jwt_token_example"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attendance/employee/{employee_id}": {
            "post": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Store an attendance record",
                "description": "Store an attendance record for an employee.",
                "operationId": "9d04d501ea26448ce959d639b3020f6b",
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "The ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "attendance_time",
                                    "month_id"
                                ],
                                "properties": {
                                    "attendance_time": {
                                        "description": "The time of attendance in HH:mm:ss format",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "08:30:00"
                                    },
                                    "month_id": {
                                        "description": "The ID of the month (1-12)",
                                        "type": "integer",
                                        "example": 4
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Attendance record saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attendance record saved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "employee_id": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "attendance_time": {
                                                    "type": "string",
                                                    "example": "08:30:00"
                                                },
                                                "shift_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "late": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "late_count": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "month_id": {
                                                    "type": "string",
                                                    "example": "4"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "example": "06:00:00"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "example": "14:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Attendance time is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No shift assigned for this employee."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payrolls/{employee_id}": {
            "post": {
                "tags": [
                    "Payroll"
                ],
                "summary": "Create or update a payroll record for an employee",
                "operationId": "12b085a0bc3bef06f16172df72582032",
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "month_id": {
                                        "description": "ID of the month",
                                        "type": "integer",
                                        "example": 4
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payroll record created or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payroll record updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "employee_id": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "salary": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 93175.37
                                                },
                                                "month_id": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "late_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "salary_deduction": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 3727.0148
                                                },
                                                "payable": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 89448.3552
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users",
                "operationId": "7e2f5799553ec93c9c43e2a58490d447",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user by ID",
                "operationId": "910a0c7cf580e1c605648d82a4e57f46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Attendance",
            "description": "Attendance"
        },
        {
            "name": "Payroll",
            "description": "Payroll"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}